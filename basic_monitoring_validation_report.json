{
  "timestamp": 1755480677.739749,
  "overall_score": 0.3333333333333333,
  "monitoring_status": "CRITICAL",
  "total_tests": 15,
  "passed_tests": 5,
  "failed_tests": 10,
  "detailed_results": {
    "metrics_service": {
      "metrics_service_importable": false,
      "prometheus_client_available": false,
      "metrics_initialization": false,
      "metric_recording": false,
      "metrics_export": false
    },
    "monitoring_middleware": {
      "middleware_importable": false,
      "fastapi_middleware_class": false,
      "websocket_monitoring": false,
      "health_check_middleware": false,
      "setup_function": false
    },
    "configuration_files": {
      "prometheus_config": true,
      "alertmanager_config": true,
      "grafana_dashboards": true,
      "alert_rules": true,
      "docker_compose": true
    }
  },
  "next_steps": [
    "Install prometheus-client: pip install prometheus-client",
    "Fix metrics export functionality",
    "Fix monitoring middleware import issues",
    "Review and fix core monitoring implementation",
    "Complete basic monitoring setup",
    "Install OpenTelemetry dependencies for tracing",
    "Start monitoring stack with Docker Compose",
    "Configure Grafana dashboards",
    "Test end-to-end monitoring pipeline"
  ]
}