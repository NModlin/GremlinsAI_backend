---
# Prometheus ConfigMap for scraping configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: gremlinsai
  labels:
    app: prometheus
    component: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'gremlinsai-production'
        environment: 'production'

    rule_files:
      - "/etc/prometheus/rules/*.yml"

    scrape_configs:
      # Prometheus self-monitoring
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
        scrape_interval: 30s
        metrics_path: /metrics

      # GremlinsAI Backend Application
      - job_name: 'gremlinsai-backend'
        static_configs:
          - targets: ['gremlinsai-backend-service:8000']
        scrape_interval: 15s
        metrics_path: /api/v1/metrics
        scrape_timeout: 10s
        honor_labels: true
        params:
          format: ['prometheus']

      # Kubernetes API Server
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      # Kubernetes Nodes
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics

      # Kubernetes Pods
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093

  alert_rules.yml: |
    groups:
      - name: gremlinsai.rules
        rules:
          # High API Error Rate
          - alert: HighAPIErrorRate
            expr: rate(gremlinsai_api_errors_total[5m]) > 0.1
            for: 2m
            labels:
              severity: warning
              service: gremlinsai-backend
            annotations:
              summary: "High API error rate detected"
              description: "API error rate is {{ $value }} errors per second for endpoint {{ $labels.endpoint }}"

          # High API Response Time
          - alert: HighAPIResponseTime
            expr: histogram_quantile(0.95, rate(gremlinsai_api_request_duration_seconds_bucket[5m])) > 5
            for: 5m
            labels:
              severity: warning
              service: gremlinsai-backend
            annotations:
              summary: "High API response time detected"
              description: "95th percentile response time is {{ $value }}s for endpoint {{ $labels.endpoint }}"

          # LLM Provider Failures
          - alert: LLMProviderFailures
            expr: rate(gremlinsai_llm_errors_total[5m]) > 0.05
            for: 3m
            labels:
              severity: critical
              service: gremlinsai-backend
            annotations:
              summary: "LLM provider experiencing failures"
              description: "LLM provider {{ $labels.provider }} has error rate of {{ $value }} per second"

          # High LLM Response Time
          - alert: HighLLMResponseTime
            expr: histogram_quantile(0.95, rate(gremlinsai_llm_response_duration_seconds_bucket[5m])) > 30
            for: 5m
            labels:
              severity: warning
              service: gremlinsai-backend
            annotations:
              summary: "High LLM response time detected"
              description: "95th percentile LLM response time is {{ $value }}s for provider {{ $labels.provider }}"

          # Agent Tool Failures
          - alert: AgentToolFailures
            expr: rate(gremlinsai_agent_tool_usage_total{status="failure"}[5m]) > 0.1
            for: 3m
            labels:
              severity: warning
              service: gremlinsai-backend
            annotations:
              summary: "High agent tool failure rate"
              description: "Tool {{ $labels.tool_name }} has failure rate of {{ $value }} per second"

          # Low RAG Relevance Scores
          - alert: LowRAGRelevanceScores
            expr: histogram_quantile(0.50, rate(gremlinsai_rag_relevance_score_bucket[10m])) < 0.3
            for: 5m
            labels:
              severity: warning
              service: gremlinsai-backend
            annotations:
              summary: "Low RAG relevance scores detected"
              description: "Median RAG relevance score is {{ $value }} for operation {{ $labels.operation }}"

          # High Memory Usage
          - alert: HighMemoryUsage
            expr: gremlinsai_memory_usage_bytes{component="application"} > 2000000000  # 2GB
            for: 5m
            labels:
              severity: warning
              service: gremlinsai-backend
            annotations:
              summary: "High memory usage detected"
              description: "Application memory usage is {{ $value | humanize }}B"

---
# Prometheus Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: gremlinsai
  labels:
    app: prometheus
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: prometheus
      containers:
        - name: prometheus
          image: prom/prometheus:v2.45.0
          args:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus/'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--storage.tsdb.retention.time=30d'
            - '--web.enable-lifecycle'
            - '--web.enable-admin-api'
          ports:
            - containerPort: 9090
              name: web
              protocol: TCP
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus/
            - name: prometheus-storage
              mountPath: /prometheus/
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 30
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 5
            failureThreshold: 3
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
        - name: prometheus-storage
          persistentVolumeClaim:
            claimName: prometheus-storage

---
# Prometheus Service
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: gremlinsai
  labels:
    app: prometheus
    component: monitoring
spec:
  type: ClusterIP
  ports:
    - port: 9090
      targetPort: 9090
      protocol: TCP
      name: web
  selector:
    app: prometheus

---
# Prometheus ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: gremlinsai

---
# Prometheus ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs: ["get", "list", "watch"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]

---
# Prometheus ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: gremlinsai

---
# Prometheus PersistentVolumeClaim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-storage
  namespace: gremlinsai
  labels:
    app: prometheus
    component: monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: standard
