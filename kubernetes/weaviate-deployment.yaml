---
# Weaviate StatefulSet for High Availability Production Deployment
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: weaviate
  namespace: gremlinsai
  labels:
    app: weaviate
    component: vector-database
    tier: data
spec:
  serviceName: weaviate-headless
  replicas: 3
  selector:
    matchLabels:
      app: weaviate
  template:
    metadata:
      labels:
        app: weaviate
        component: vector-database
        tier: data
    spec:
      # Anti-affinity to ensure pods are distributed across nodes
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - weaviate
            topologyKey: kubernetes.io/hostname
      containers:
      - name: weaviate
        image: semitechnologies/weaviate:1.22.4
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 50051
          name: grpc
          protocol: TCP
        env:
        # Authentication and Security
        - name: AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED
          value: "false"
        - name: AUTHENTICATION_APIKEY_ENABLED
          value: "true"
        - name: AUTHENTICATION_APIKEY_ALLOWED_KEYS
          valueFrom:
            secretKeyRef:
              name: weaviate-auth
              key: api-keys
        - name: AUTHENTICATION_APIKEY_USERS
          valueFrom:
            secretKeyRef:
              name: weaviate-auth
              key: api-users
        
        # Persistence Configuration
        - name: PERSISTENCE_DATA_PATH
          value: "/var/lib/weaviate"
        - name: PERSISTENCE_LSM_ACCESS_STRATEGY
          value: "mmap"
        - name: PERSISTENCE_FLUSH_IDLE_MEMTABLES_AFTER
          value: "60s"
        
        # Cluster Configuration
        - name: CLUSTER_HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CLUSTER_GOSSIP_BIND_PORT
          value: "7100"
        - name: CLUSTER_DATA_BIND_PORT
          value: "7101"
        - name: CLUSTER_JOIN
          value: "weaviate-0.weaviate-headless.gremlinsai.svc.cluster.local:7100,weaviate-1.weaviate-headless.gremlinsai.svc.cluster.local:7100,weaviate-2.weaviate-headless.gremlinsai.svc.cluster.local:7100"
        
        # Performance Optimization
        - name: QUERY_DEFAULTS_LIMIT
          value: "100"
        - name: QUERY_MAXIMUM_RESULTS
          value: "10000"
        - name: TRACK_VECTOR_DIMENSIONS
          value: "true"
        - name: DEFAULT_VECTORIZER_MODULE
          value: "none"
        
        # Resource Management
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
        - name: GOMAXPROCS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        
        # Monitoring and Observability
        - name: PROMETHEUS_MONITORING_ENABLED
          value: "true"
        - name: LOG_LEVEL
          value: "info"
        
        # Health Check Configuration
        livenessProbe:
          httpGet:
            path: /v1/.well-known/live
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /v1/.well-known/ready
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        # Resource Requirements for 10K QPS
        resources:
          requests:
            cpu: "2000m"
            memory: "8Gi"
          limits:
            cpu: "4000m"
            memory: "16Gi"
        
        # Volume Mounts
        volumeMounts:
        - name: weaviate-data
          mountPath: /var/lib/weaviate
        - name: weaviate-config
          mountPath: /weaviate-config
          readOnly: true
      
      # Security Context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      
      volumes:
      - name: weaviate-config
        configMap:
          name: weaviate-config
  
  # Persistent Volume Claim Template
  volumeClaimTemplates:
  - metadata:
      name: weaviate-data
      labels:
        app: weaviate
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: fast-ssd
      resources:
        requests:
          storage: 500Gi

---
# Headless Service for StatefulSet
apiVersion: v1
kind: Service
metadata:
  name: weaviate-headless
  namespace: gremlinsai
  labels:
    app: weaviate
    component: vector-database
spec:
  clusterIP: None
  selector:
    app: weaviate
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: grpc
    port: 50051
    targetPort: 50051
    protocol: TCP
  - name: gossip
    port: 7100
    targetPort: 7100
    protocol: TCP
  - name: data
    port: 7101
    targetPort: 7101
    protocol: TCP

---
# Load Balancer Service for External Access
apiVersion: v1
kind: Service
metadata:
  name: weaviate-lb
  namespace: gremlinsai
  labels:
    app: weaviate
    component: vector-database
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
spec:
  type: LoadBalancer
  selector:
    app: weaviate
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: grpc
    port: 50051
    targetPort: 50051
    protocol: TCP
  sessionAffinity: None

---
# ConfigMap for Weaviate Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: weaviate-config
  namespace: gremlinsai
  labels:
    app: weaviate
    component: vector-database
data:
  weaviate.conf.yaml: |
    authentication:
      anonymous_access:
        enabled: false
      apikey:
        enabled: true
    authorization:
      admin_list:
        enabled: true
        users: ["admin"]
    query_defaults:
      limit: 100
    query_maximum_results: 10000
    persistence:
      data_path: "/var/lib/weaviate"
      lsm_access_strategy: "mmap"
      flush_idle_memtables_after: 60s
    cluster:
      hostname: "auto"
      gossip_bind_port: 7100
      data_bind_port: 7101
    monitoring:
      enabled: true
    debug: false
    log_level: "info"

---
# Secret for Authentication
apiVersion: v1
kind: Secret
metadata:
  name: weaviate-auth
  namespace: gremlinsai
  labels:
    app: weaviate
    component: vector-database
type: Opaque
data:
  # Base64 encoded API keys (replace with actual keys)
  api-keys: YWRtaW4ta2V5LGFwcC1rZXksZGV2LWtleQ==  # admin-key,app-key,dev-key
  api-users: YWRtaW46YWRtaW4ta2V5LGFwcDphcHAta2V5LGRldjpkZXYta2V5  # admin:admin-key,app:app-key,dev:dev-key

---
# Namespace for GremlinsAI
apiVersion: v1
kind: Namespace
metadata:
  name: gremlinsai
  labels:
    name: gremlinsai
    tier: production

---
# StorageClass for High-Performance SSD
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: fast-ssd
  labels:
    app: weaviate
provisioner: kubernetes.io/aws-ebs
parameters:
  type: gp3
  iops: "16000"
  throughput: "1000"
  fsType: ext4
  encrypted: "true"
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true
reclaimPolicy: Retain

---
# PodDisruptionBudget for High Availability
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: weaviate-pdb
  namespace: gremlinsai
  labels:
    app: weaviate
    component: vector-database
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: weaviate

---
# HorizontalPodAutoscaler for Dynamic Scaling
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: weaviate-hpa
  namespace: gremlinsai
  labels:
    app: weaviate
    component: vector-database
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: StatefulSet
    name: weaviate
  minReplicas: 3
  maxReplicas: 9
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 600
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
